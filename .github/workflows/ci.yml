name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  find_changed_projects:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set-matrix
        run: |
          # For pull requests, compare against the base branch
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "Pull request detected"
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD)
          else
            echo "Push detected"
            # For pushes, compare against the previous commit
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          fi
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Find Cargo.toml directories that have changes
          CHANGED_PROJECTS=$(echo "$CHANGED_FILES" | xargs -I {} dirname {} | sort -u | \
            while read dir; do
              if [ -f "$dir/Cargo.toml" ]; then
                echo "$dir"
              elif [ -f "$(echo "$dir" | cut -d/ -f1)/Cargo.toml" ]; then
                echo "$(echo "$dir" | cut -d/ -f1)"
              fi
            done | sort -u | jq -R -s -c 'split("\n")[:-1]')
          
          if [ "$CHANGED_PROJECTS" == "[]" ] || [ -z "$CHANGED_PROJECTS" ]; then
            CHANGED_PROJECTS="[]"
            echo "No Rust projects changed"
          else
            echo "Changed projects: $CHANGED_PROJECTS"
          fi
          
          echo "matrix=${CHANGED_PROJECTS}" >> $GITHUB_OUTPUT

  build_and_test:
    needs: find_changed_projects
    if: ${{ needs.find_changed_projects.outputs.matrix != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.find_changed_projects.outputs.matrix) }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ${{ matrix.project }}/target/debug/deps
          key: ${{ runner.os }}-cargo-${{ matrix.project }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.project }}-

      - name: Build
        run: |
          cd ${{ matrix.project }}
          cargo build --verbose

      - name: Run tests
        run: |
          cd ${{ matrix.project }}
          cargo test --verbose